[platformio]
default_envs = emulator_64bits
boards_dir = boards

[env]
build_unflags = 
	-std=gnu++11
	-fno-rtti
check_tool = cppcheck
check_flags = --enable=all
monitor_filters = 
	esp32_exception_decoder
	colorize
build_flags = 
	-D LV_CONF_INCLUDE_SIMPLE
	-D LV_USE_FRAGMENT
	-D LV_USE_MSG
	-std=gnu++17
	-DCONFIG_ASYNC_TCP_RUNNING_CORE=0
lib_deps = 
	lvgl/lvgl@^8.3.9
	bakercp/crc32@2.0.0
	https://github.com/me-no-dev/ESPAsyncWebServer.git
	https://github.com/me-no-dev/AsyncTCP.git
	WebGenerator
	sstaub/NTP
lib_archive = false

[env:emulator_64bits]
platform = native@^1.2.1
build_type = debug
debug_test = *
extra_scripts = support/sdl2_build_extra.py
build_flags = 
	${env.build_flags}
	-D LV_LOG_LEVEL=LV_LOG_LEVEL_INFO
	-D LV_LOG_PRINTF=1
	!python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/sdl2')]))"
	-lSDL2
	-D LV_LVGL_H_INCLUDE_SIMPLE
	-D LV_DRV_NO_CONF
	-D USE_SDL
	-D SDL_HOR_RES=540
	-D SDL_VER_RES=960
	-D SDL_ZOOM=1
	-D SDL_INCLUDE_PATH="\"SDL2/SDL.h\""
	-D LV_FONT_MONTSERRAT_44=1
	-D LV_MEM_CUSTOM=1
	-D LV_MEM_SIZE="(128U * 1024U)"
	-I /opt/homebrew/Cellar/sdl2/2.28.2/include
	-L /opt/homebrew/Cellar/sdl2/2.28.2/lib
lib_deps = 
	${env.lib_deps}
	lv_drivers=https://github.com/lvgl/lv_drivers/archive/refs/tags/v8.3.0.zip
	bblanchon/ArduinoJson@^6.21.3
build_src_filter = 
	+<*>
	+<../hal/sdl2>
	+<../.pio/libdeps/emulator_64bits/lvgl/demos>

[env:sunton_s3]
platform = espressif32@6.5.0
board = sunton_s3
framework = arduino
platform_packages = platformio/framework-arduinoespressif32@3.20004.0
upload_speed = 1500000
monitor_speed = 115200
board_build.partitions = partitions_16MB.csv
check_tool = 
	${env.check_tool}
check_flags = 
	${env.check_flags}
build_src_filter = 
	+<*>
	+<../hal/sutons3>
	+<../hal/esp32>
#debug_tool = esp-builtin
build_flags = 
	${env.build_flags}
	-DBOARD_HAS_PSRAM
	-DCORE_DEBUG_LEVEL=5
	-mfix-esp32-psram-cache-issue
	-D LV_CONF_INCLUDE_SIMPLE=1
	-D LV_CONF_PATH="${platformio.include_dir}/lv_conf.h"
	!python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/sutons3')]))"
build_unflags = 
	${env.build_unflags}
lib_deps =
    ${env.lib_deps}
	lovyan03/LovyanGFX@^1.1.12
	bblanchon/ArduinoJson@^7.0.0
	
[env:m5stack-fire]
platform = espressif32@^6.5.0
board = m5paper
framework = arduino
platform_packages = platformio/framework-arduinoespressif32@3.20014.231204
upload_speed = 1500000
monitor_speed = 115200
board_build.flash_mode=qio
board_build.partitions = partitions_16MB.csv
build_src_filter = 
	+<*>
	+<../hal/m5paper>
	+<../hal/esp32>
build_flags = 
	${env.build_flags}
	-DCORE_DEBUG_LEVEL=5
	-DBOARD_HAS_PSRAM
	-mfix-esp32-psram-cache-issue
	-D LV_CONF_INCLUDE_SIMPLE=1
	-D LV_CONF_PATH="${platformio.include_dir}/lv_conf.h"
	!python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/m5paper')]))"
build_unflags = 
	${env.build_unflags}
lib_deps = 
	${env.lib_deps}
	lovyan03/LovyanGFX@^1.1.12
	bblanchon/ArduinoJson@^7.0.0
	makuna/RTC@^2.4.2

[env:t547plus]
platform = espressif32@^6.3.2
board = lilygo-t5-47-plus
platform_packages = platformio/framework-arduinoespressif32@3.20004.0
upload_protocol = esptool
framework = arduino
upload_speed = 921600
monitor_speed = 115200
board_build.partitions = partitions_16MB.csv
build_src_filter = 
	+<*>
	+<../hal/t47>
	+<../hal/esp32>
debug_tool = esp-builtin
build_flags = 
	${env.build_flags}
	-D CORE_DEBUG_LEVEL=3
	;-DBOARD_HAS_PSRAM
	;-mfix-esp32-psram-cache-issue
	-D LV_CONF_INCLUDE_SIMPLE=1
	-D LV_CONF_PATH="${platformio.include_dir}/lv_conf.h"
	!python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/t47')]))"
	-DARDUINO_USB_MODE=1 
	-DARDUINO_USB_CDC_ON_BOOT=0
build_unflags = 
	${env.build_unflags}
lib_deps = 
	${env.lib_deps}
	bblanchon/ArduinoJson@^7.0.0
	Wire
	https://github.com/lewisxhe/PCF8563_Library.git
	https://github.com/Xinyuan-LilyGO/LilyGo-EPD47/